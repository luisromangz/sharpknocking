
SHARP KNOCKING PROJECT

 This project is a implementation of the port knocking principles (see 
www.portknocking.org) in c# for every *nix flavour that have a kernel with
 iptables (1.3.5 at least) and mono (1.2.3 at least).

iSharpKnocking PROJECT

 This project is the evolution and extension of the previous project as a totally new development over our knowledge and code base that aims higher in our feature list to make it a better project.

 iSharpKnocking project developers continue to develop over the sharpKnocking svn and to write in the sharpKnocking blog and wiki. This is more a distintion of the new way of doing things than a totally new project itself.

LICENSE

 (c) 2007 by the authors and members:
     Luis Román Gutiérrez
	 Miguel Ángel Pérez Valencia
	 Diego Campoy Collado

 This project is licensed under the LGPL V2 wich can be read in the file
lgpl.txt in the root of the sources and has a preamble in the start of each file.

DIRECTORIES ESTRUCTURE

- Doc
   Documentation directory. Examples and Api docs.
- SharpKocking
   Project Solution. This is the code for the main applicatons.
   Source code written in c# using monodevelop.
        - Common
            Subproject.
            Common functionality used by various subprojects.
        - CommonWidgets
            Subproject.
            Common ui controls.
        - Doorman
            Subproject.
            Server side manager application.
        - KnockingDaemon
            Subproject.
            Capture packets and looks for knockings. Handles rules to allow
            incoming connections.
        - NetfilterFirewall
            Subproject.
            Approach to work against iptables command-line utility using a object-oriented
			way. This subproject is getting moved to a library called IptablesNet
        - PortKnocker
            Subproject.
            Client application to perform the knocking that grants access to a
            hidden service in the target machine.
- ThirdParty
   Solution
   Other projects/solutions and code for libraries or other things that are not created by
   us but that we use modified or not.
- Library
   Binary libraries used.
- Extras
   Solution
   Other projects/solutions that sharpknocking uses but that are not a specific part of the
   project and can have another uses.
   This should include contribution projects.
		- IptablesNet
			Root directory for the IptablesNet subproject. Is a major rewrite of the library
			used to handle the rules in the firewall through the iptables command.
				- IptablesNet.Core
					Subproject.
					Core classes.
				- IptablesNet.MatchExtensions
					Subproject.
					Implementation of the extensions for matching packets.
				- IptablesNet.TargetExtensions
					Subproject.
					Implementation of the extension for new tarjets.
				- IptablesNet.Net
					Subproject.
					Network related classes library.
				- IptablesNet.UI.Conole
					Subproject.
					Console interface for the library.
				- IptablesNet.UI.Gtk
					Subproject.
					Graphic desktop interface application for the library.
				- lib
					Aditional Library directory
- Tests
   Samples and testing scripts.


