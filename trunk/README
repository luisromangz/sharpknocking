
-- SHARP KNOCKING PROJECT --

 This project is a implementation of the port knocking principles (see 
www.portknocking.org) in c# for every *nix flavour that have a kernel with
 iptables (1.3.5 at least) and mono (1.2.3 at least).

-- iSharpKnocking PROJECT --

 This project is the evolution and extension of the previous project as a 
complete rewrite from scratch from our knowledge and code base that aims higher
in our feature list to make it a better project.

 iSharpKnocking project developers continue to develop over the sharpKnocking 
svn and to write in the sharpKnocking blog and wiki. This is more a new way of 
doing things than a totally new project itself. Maybe in a future we would
rebrand all this stuff when it gets more mature.

-- LICENSE --

  (c) 2007/2008 by authors and contributors:
    Luis Román Gutiérrez
    Miguel Ángel Pérez Valencia
    Diego Campoy Collado

 This project is licensed under the LGPL V2 wich can be read in the file
 lgpl.txt in the root of the sources and has a preamble in the start of each 
 file.

 For more details see LICENSE file.

-- DIRECTORIES ESTRUCTURE --

- Doc
   Documentation directory. Examples and Api docs.
- iSharpKnocking
   New project solution. This is a refactoring over the old code
   		- iSharpKnocking.Core
			Core library
		- iSharpKnocking.Daemon
			Knocking daemon
		- iSharpKnocking.Doorman
			Doorman management gui.
		- iSharpKnocking.Knocker
			Client gui
- SharpKocking
   Old project Solution. This is the code for the main applicatons.
   Source code written in c# using monodevelop for the final of the
   CUSL-2007.
        - Common
            Subproject.
            Common functionality used by various subprojects.
        - CommonWidgets
            Subproject.
            Common ui controls.
        - Doorman
            Subproject.
            Server side manager application.
        - KnockingDaemon
            Subproject.
            Capture packets and looks for knockings. Handles rules to allow
            incoming connections.
        - NetfilterFirewall
            Subproject.
            Approach to work against iptables command-line utility using an
	    object-oriented approach.
	    This subproject is getting moved to a library called IptablesNet.
        - PortKnocker
            Subproject.
            Client application to perform the knocking that grants access to a
            hidden service in the target machine.
- Library
   Binary libraries used.
- Extras
   Other projects/solutions that sharpknocking uses but that are not a specific
   part of the project and can have another uses.
   This should include contribution projects or our own subprojects.
		- IptablesSharp
		  Is a major rewrite of the library used to handle the rules in
                  the netfilter packet filtering tables through the iptables 
		  command.
		  + IptablesSharp.Core
		    Subproject. Core classes.
		  + IptablesSharp.Extensions.Matches
		    Subproject. Support for match extensions.
		  + IptablesSharp.Extensions.Targets
		    Subproject. Suppport for target extensions.
		  + IptablesSharp.Net
		    Subproject. Network related classes library.
- Tests
   Samples and testing scripts used in development.

-- Build instructions --
See the file INSTALL

-- Contact --
See the file CONTACT

-- Developers --
See DEVELOPERS file

-- Contribute --
See CONTRIBUTE file
